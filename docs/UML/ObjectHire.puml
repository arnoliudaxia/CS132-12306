@startuml
'https://plantuml.com/class-diagram

class TrainDispatch{
datetime SysTime
List<Station> Stations
List<Train> Trains


void changeSysTime(deltaTime)
string findAvailableTickets(fromStation,toStation,level)
void bookTicket(trainCode,fromStation,toStation,level)
Train findTrain(trainCode)
int[] requestAvailableSeats(trainCode,fromStation, toStation)

}

class Train{
 string trainCode
 trainStatus status
 List<Station> remainingStations
 int lineType
 bool lineDirection
 bool DorG
 int PassType

 void updateTrainStatus()
 bool findPasswayStation(queryStation)
 bool findPasswayStationWithoutTime(queryStation)
 bool findPasswayStationAfterStation(queryStation,filterStation)
 datetime getStationDepartureTime(queryStation)
 void bookTicket(fromStation,toStation,seatLevel)
int[] requestAvailableSeats(app,fromStation, toStation)

}

class Station{
    string stationName
    datetime arrivalTime
    datetime departureTime
 int[] remainingSeats


    int getDistance(other)
    bool isSameSide(other)
}

TrainDispatch *-- Train
TrainDispatch *-- Station


Station ..* Train



enum trainStatus{
    NOTSTARTED
    RUNNING
    STOPPED
}

Train *-- trainStatus

interface matlabAPP{

}

class debugApp{
    void display_update_systime()
    void updateTrainUI()
}
TrainDispatch *-- debugApp
matlabAPP *.. debugApp

class mainApp{
    string searchTrains()
}
TrainDispatch *-- mainApp
matlabAPP *.. mainApp




@enduml
